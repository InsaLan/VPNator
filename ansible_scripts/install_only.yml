---
- hosts: vpn
  remote_user: nicolas
  vars:
          #subnet: "{{ hostvars[inventory_hostname].subnet }}"
    port: 5010
    protocol: tcp
        #ovpnNumber: "{{ hostvars[inventory_hostname].fournisseur }}"
    
  tasks:
  - name: Create a folder for the VPN software
    become: true
    become_method: sudo
    file:
     path: /home/vpn
     state: directory

  - name: Push the custom script using templates
    become: true
    become_method: sudo
    template: src=templates/oneliner_template.j2 dest=/home/vpn/setup_from_naboo_ansible.sh
      owner=debian
      mode=0777

  # Here begins the oneliner
  - name: Check that we are running on Debian
    stat:
        path: /etc/debian_version
    register: is_debian

  - name: Exist when not on Debian
    meta: end_play
    when: register.stat.exists == False

    #- name: Launch of the oneliner
    #become: true
    #become_method: sudo
    #command: bash /home/vpn/setup_from_naboo_ansible.sh

  - name: Rename dev tun
    become: true
    become_method: sudo
    lineinfile:            
      path: "/home/nabooVPN{{ ovpnNumber }}.ovpn"
      regexp: '^dev tun'
      line: "dev tun{{groups['vpn'].index(inventory_hostname) + 1}}"

  - name: Repatriate .ovpn files
    become: true
    become_method: sudo
    fetch:
      src: "/home/nabooVPN{{ ovpnNumber }}.ovpn"
      dest: ../openvpn_files/
      flat: true

  - name: Deploy tunnels
    become: true
    become_method: sudo
#    lineinfile:
#      path: templates/emergencyVPN.sh
#      regexp: '^file='
#      line: 'file="nabooVPN{{ ovpnNumber }}.ovpn"'
    command: bash templates/tunnels.sh nabooVPN{{ ovpnNumber }}.ovpn
    delegate_to: localhost

  - name: IP Table Rule
    become: true
    become_method: sudo
    command: iptables -t nat -A POSTROUTING -o en+ -j MASQUERADE
